{"version":3,"file":"event.manager.js","sourceRoot":"","sources":["../../../../src/stormpath/event.manager.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAC,MAAM,SAAS,CAAC;AAChD,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;;IAQzC;QAAA,iBAIC;QAHG,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,UAAC,QAAuB;YACxD,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B,CAAC,CAAC,KAAK,EAAE,CAAC;KACd;IAED,gCAAS,GAAT,UAAU,KAAU;QAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC7B;IAED,gCAAS,GAAT,UAAU,SAAiB,EAAE,QAAa;QACxC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,KAAU;YACrC,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS,CAAC;SACjC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;KAC1B;IAED,8BAAO,GAAP,UAAQ,UAAwB;QAC5B,UAAU,CAAC,WAAW,EAAE,CAAC;KAC5B;uBA5BL","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observer, Subscription} from 'rxjs/Rx';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class EventManager {\n\n    observable: Observable<any>;\n    observer: Observer<any>;\n\n    constructor() {\n        this.observable = Observable.create((observer: Observer<any>) => {\n            this.observer = observer;\n        }).share();\n    }\n\n    broadcast(event: any): any {\n        this.observer.next(event);\n    }\n\n    subscribe(eventName: string, callback: any): any {\n      return this.observable.filter((event: any) => {\n          return event.name === eventName;\n        }).subscribe(callback);\n    }\n\n    destroy(subscriber: Subscription): void {\n        subscriber.unsubscribe();\n    }\n}\n"]}