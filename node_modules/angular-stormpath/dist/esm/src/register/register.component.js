import { Component, Input, OnInit, TemplateRef } from '@angular/core';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs/Observable';
import { Account } from '../shared/account';
import { Stormpath, LoginFormModel, RegistrationFormModel } from '../stormpath/stormpath.service';
var RegisterComponent = /** @class */ (function () {
    function RegisterComponent(stormpath) {
        this.stormpath = stormpath;
        this.unverified = false;
        this.canLogin = false;
        this.formModel = {
            email: '',
            surname: '',
            givenName: '',
            password: ''
        };
    }
    RegisterComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.stormpath.getRegistrationViewModel()
            .subscribe(function (model) {
            _this.model = model;
        }, function (error) {
            return _this.error = error.message;
        });
    };
    RegisterComponent.prototype.register = function () {
        var _this = this;
        this.stormpath.register(this.formModel)
            .subscribe(function (account) {
            _this.registered = true;
            _this.unverified = account.status === 'UNVERIFIED';
            _this.canLogin = account.status === 'ENABLED';
            if (_this.canLogin && _this.autoLogin) {
                var loginAttempt = {
                    login: _this.formModel.email,
                    password: _this.formModel.password
                };
                _this.stormpath.login(loginAttempt);
            }
        }, function (error) { return _this.error = error.message; });
    };
    RegisterComponent.prototype.onSubmit = function () {
        this.register();
    };
    return RegisterComponent;
}());
export { RegisterComponent };
//# sourceMappingURL=register.component.js.map