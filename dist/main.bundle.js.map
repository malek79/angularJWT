{"version":3,"sources":["/home/malek/eclipse-workspace/angular-jwt-app/src/$_lazy_route_resource lazy","/home/malek/eclipse-workspace/angular-jwt-app/src/app/admin/admin.component.css","/home/malek/eclipse-workspace/angular-jwt-app/src/app/admin/admin.component.html","/home/malek/eclipse-workspace/angular-jwt-app/src/app/admin/admin.component.ts","/home/malek/eclipse-workspace/angular-jwt-app/src/app/app-routing.module.ts","/home/malek/eclipse-workspace/angular-jwt-app/src/app/app.component.css","/home/malek/eclipse-workspace/angular-jwt-app/src/app/app.component.html","/home/malek/eclipse-workspace/angular-jwt-app/src/app/app.component.ts","/home/malek/eclipse-workspace/angular-jwt-app/src/app/app.module.ts","/home/malek/eclipse-workspace/angular-jwt-app/src/app/guards/admin-auth-guard.service.ts","/home/malek/eclipse-workspace/angular-jwt-app/src/app/guards/auth-guard.service.ts","/home/malek/eclipse-workspace/angular-jwt-app/src/app/home/home.component.css","/home/malek/eclipse-workspace/angular-jwt-app/src/app/home/home.component.html","/home/malek/eclipse-workspace/angular-jwt-app/src/app/home/home.component.ts","/home/malek/eclipse-workspace/angular-jwt-app/src/app/login/login.component.css","/home/malek/eclipse-workspace/angular-jwt-app/src/app/login/login.component.html","/home/malek/eclipse-workspace/angular-jwt-app/src/app/login/login.component.ts","/home/malek/eclipse-workspace/angular-jwt-app/src/app/services/app-data.service.ts","/home/malek/eclipse-workspace/angular-jwt-app/src/app/services/auth.constant.ts","/home/malek/eclipse-workspace/angular-jwt-app/src/app/services/authentication.service.ts","/home/malek/eclipse-workspace/angular-jwt-app/src/app/services/user.service.ts","/home/malek/eclipse-workspace/angular-jwt-app/src/app/user/user.component.css","/home/malek/eclipse-workspace/angular-jwt-app/src/app/user/user.component.html","/home/malek/eclipse-workspace/angular-jwt-app/src/app/user/user.component.ts","/home/malek/eclipse-workspace/angular-jwt-app/src/environments/environment.ts","/home/malek/eclipse-workspace/angular-jwt-app/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/malek/eclipse-workspace/angular-jwt-app/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/admin/admin.component.css\n// module id = ../../../../../src/app/admin/admin.component.css\n// module chunks = main","module.exports = \"<h2>\\n  Admin screen. Available for Admin users\\n</h2>\\n\\n<p>Here is the data received from SpringBoot API for Admin users ONLY</p>\\n\\n<pre>{{users$| async | json}}</pre>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/admin/admin.component.html\n// module id = ../../../../../src/app/admin/admin.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\n\nimport {AppDataService} from '../services/app-data.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  users$;\n\n  constructor(private appDataService: AppDataService) {\n  }\n\n  ngOnInit() {\n    this.users$ = this.appDataService.getUsers();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/admin/admin.component.ts","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {LoginComponent} from './login/login.component';\nimport {AdminComponent} from './admin/admin.component';\nimport {AuthGuard} from './guards/auth-guard.service';\nimport {AdminAuthGuard} from './guards/admin-auth-guard.service';\n\nimport {HomeComponent} from './home/home.component';\nimport {UserComponent} from './user/user.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'admin',\n    component: AdminComponent,\n    canActivate: [AuthGuard, AdminAuthGuard]\n  },\n  {\n    path: 'user',\n    component: UserComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '**',\n    redirectTo: '/home'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h1 {\\n  text-align: center;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<h1>\\n  {{title}} \\n</h1>\\n\\n<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/home\\\">Home</a></li>\\n      <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/user\\\">User</a></li>\\n      <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/admin\\\">Admin</a></li>\\n    </ul>\\n\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <p class=\\\"navbar-text\\\" *ngIf=\\\"isAdminUser\\\">You are admin!</p>\\n      <p class=\\\"navbar-text\\\" *ngIf=\\\"isUser\\\">You are user!</p>\\n      <li><button class=\\\"btn navbar-btn\\\" (click)=\\\"logout()\\\">Logout</button></li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ChangeDetectorRef} from '@angular/core';\n\nimport {UserService} from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular SpringBoot JWT integration';\n\n  constructor(private router: Router, private userService: UserService, private cdRef: ChangeDetectorRef) {\n\n  }\n\n  ngAfterViewChecked() {\n    // Avoid the error: ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked\n    this.cdRef.detectChanges();\n  }\n\n  logout() {\n    this.userService.logout();\n    this.router.navigate(['/']);\n  }\n\n  get isAdminUser() {\n    return this.userService.isAdminUser();\n  }\n\n  get isUser() {\n    return this.userService.isUser();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {Http, HttpModule} from '@angular/http';\nimport {AuthConfig, AuthHttp} from 'angular2-jwt';\n\nimport {AppRoutingModule} from './app-routing.module';\n\nimport {AppComponent} from './app.component';\nimport {HomeComponent} from './home/home.component';\nimport {AdminComponent} from './admin/admin.component';\nimport {LoginComponent} from './login/login.component';\nimport {UserComponent} from './user/user.component';\n\nimport {UserService} from './services/user.service';\nimport {AuthenticationService} from './services/authentication.service';\nimport {AuthGuard} from './guards/auth-guard.service';\nimport {AdminAuthGuard} from './guards/admin-auth-guard.service';\nimport {TOKEN_NAME} from './services/auth.constant';\nimport {AppDataService} from './services/app-data.service';\n\nexport function authHttpServiceFactory(http: Http) {\n  return new AuthHttp(new AuthConfig({\n    headerPrefix: 'Bearer',\n    tokenName: TOKEN_NAME,\n    globalHeaders: [{'Content-Type': 'application/json'}],\n    noJwtError: false,\n    noTokenScheme: true,\n    tokenGetter: (() => localStorage.getItem(TOKEN_NAME))\n  }), http);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AdminComponent,\n    UserComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n\n    AppRoutingModule\n  ],\n  providers: [\n    {provide: AuthHttp, useFactory: authHttpServiceFactory, deps: [Http]},\n    AuthenticationService,\n    UserService,\n    AuthGuard,\n    AdminAuthGuard,\n    AppDataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/app.module.ts","import {Injectable} from '@angular/core';\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\n\nimport {UserService} from '../services/user.service';\n\n@Injectable()\nexport class AdminAuthGuard implements CanActivate {\n  constructor(private router: Router, private userService: UserService) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const isAdmin = this.userService.isAdminUser();\n    if (isAdmin) {\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/guards/admin-auth-guard.service.ts","import {Injectable} from '@angular/core';\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport {tokenNotExpired} from 'angular2-jwt';\n\nimport {TOKEN_NAME} from '../services/auth.constant';\nimport {UserService} from '../services/user.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private userService: UserService) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (tokenNotExpired(TOKEN_NAME, this.userService.accessToken)) {\n      return true;\n    } else {\n      this.router.navigate(['login'], {queryParams: {redirectTo: state.url}});\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/guards/auth-guard.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = main","module.exports = \"<h2>\\n  Home screen. Available for all authorized and not authorized users.\\n</h2>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/home/home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".form-wrapper {\\n  display: block;\\n  max-width: 400px;\\n  margin: 0 auto 0;\\n}\\n\\nform {\\n  input {\\n    margin: 20px 0;\\n    height: 45px;\\n  }\\n}\\n\\nbutton {\\n  width: 100%;\\n  height: 45px;\\n}\\n\\np{\\n  text-align: center;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = main","module.exports = \"<p>Non-admin username and password: john.doe and jwtpass</p>\\n<p>Admin user: admin.admin and jwtpass</p>\\n\\n<div class=\\\"form-wrapper\\\">\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && login()\\\" #f=\\\"ngForm\\\" novalidate>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !username.valid }\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"model.username\\\" #username=\\\"ngModel\\\"\\n             required placeholder=\\\"Username\\\"/>\\n      <div *ngIf=\\\"f.submitted && !username.valid\\\" class=\\\"help-block\\\">Username is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !password.valid }\\\">\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\"\\n             required placeholder=\\\"Password\\\"/>\\n      <div *ngIf=\\\"f.submitted && !password.valid\\\" class=\\\"help-block\\\">Password is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">Sign In</button>\\n    </div>\\n    <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">{{error}}</div>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\n\nimport {AuthenticationService} from '../services/authentication.service';\nimport {UserService} from '../services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  model: any = {};\n  loading = false;\n  error = '';\n  redirectUrl: string;\n\n  constructor(private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private authenticationService: AuthenticationService,\n              private userService: UserService) {\n    this.redirectUrl = this.activatedRoute.snapshot.queryParams['redirectTo'];\n  }\n\n  ngOnInit(): void {\n    this.userService.logout();\n  }\n\n  login() {\n    this.loading = true;\n\n    this.authenticationService.login(this.model.username, this.model.password)\n      .subscribe(\n        result => {\n          this.loading = false;\n\n          if (result) {\n            this.userService.login(result);\n            this.navigateAfterSuccess();\n          } else {\n            this.error = 'Username or password is incorrect';\n          }\n        },\n        error => {\n          this.error = 'Username or password is incorrect';\n          this.loading = false;\n        }\n      );\n  }\n\n  private navigateAfterSuccess() {\n    if (this.redirectUrl) {\n      this.router.navigateByUrl(this.redirectUrl);\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/login/login.component.ts","import {Injectable} from '@angular/core';\nimport {AuthHttp} from 'angular2-jwt';\n\n@Injectable()\nexport class AppDataService {\n  constructor(private http: AuthHttp) {\n  }\n\n  getCities() {\n    return this.http.get('/springjwt/cities').map(res => res.json());\n  }\n\n  getUsers() {\n    return this.http.get('/springjwt/users').map(res => res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/services/app-data.service.ts","export const TOKEN_AUTH_USERNAME = 'testjwtclientid';\nexport const TOKEN_AUTH_PASSWORD = 'XY7kmzoNzl100';\nexport const TOKEN_NAME = 'access_token';\n\n\n\n// WEBPACK FOOTER //\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/services/auth.constant.ts","import {Injectable} from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport 'rxjs/add/operator/map';\n\nimport {TOKEN_AUTH_PASSWORD, TOKEN_AUTH_USERNAME} from '../services/auth.constant';\n\n@Injectable()\nexport class AuthenticationService {\n  static AUTH_TOKEN = '/oauth/token';\n  constructor(private http: Http) {\n  }\n\n  login(username: string, password: string) {\n    let body = `username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}&grant_type=password`;\n\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    headers.append('Authorization', 'Basic ' + btoa(TOKEN_AUTH_USERNAME + ':' + TOKEN_AUTH_PASSWORD));\n\n    return this.http.post(AuthenticationService.AUTH_TOKEN, body, {headers})\n      .map(res => res.json())\n      .map((res: any) => {\n        if (res.access_token) {\n          return res.access_token;\n        }\n        return null;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/services/authentication.service.ts","import {Injectable} from '@angular/core';\nimport {JwtHelper} from 'angular2-jwt';\n\nimport {TOKEN_NAME} from '../services/auth.constant';\n\n@Injectable()\nexport class UserService {\n  jwtHelper: JwtHelper = new JwtHelper();\n  accessToken: string;\n  isAdmin: boolean;\n\n  constructor() {\n  }\n\n  login(accessToken: string) {\n    const decodedToken = this.jwtHelper.decodeToken(accessToken);\n    console.log(decodedToken);\n\n    this.isAdmin = decodedToken.authorities.some(el => el === 'ADMIN_USER');\n    this.accessToken = accessToken;\n\n    localStorage.setItem(TOKEN_NAME, accessToken);\n  }\n\n  logout() {\n    this.accessToken = null;\n    this.isAdmin = false;\n    localStorage.removeItem(TOKEN_NAME);\n  }\n\n  isAdminUser(): boolean {\n    return this.isAdmin;\n  }\n\n  isUser(): boolean {\n    return this.accessToken && !this.isAdmin;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/services/user.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/user/user.component.css\n// module id = ../../../../../src/app/user/user.component.css\n// module chunks = main","module.exports = \"<h2>\\n  User screen. Available for all authenticated users\\n</h2>\\n\\n<p>Here is the data received from SpringBoot API for all authenticated users</p>\\n\\n<pre>{{city$ | async | json}}</pre>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/user/user.component.html\n// module id = ../../../../../src/app/user/user.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\n\nimport {AppDataService} from '../services/app-data.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  city$;\n\n  constructor(private appDataService: AppDataService) {\n  }\n\n  ngOnInit() {\n    this.city$ = this.appDataService.getCities();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/malek/eclipse-workspace/angular-jwt-app/src/app/user/user.component.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/malek/eclipse-workspace/angular-jwt-app/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/malek/eclipse-workspace/angular-jwt-app/src/main.ts"],"sourceRoot":"webpack:///"}